// Generated by Dagger (https://dagger.dev).
package com.inquallity.daggersandbox;

import com.inquallity.daggersandbox.mainer.IMainer;
import com.inquallity.daggersandbox.mainer.Mainer_Factory;
import com.inquallity.daggersandbox.providers.MainSubcomponent;
import com.inquallity.daggersandbox.scanner.IScanner;
import com.inquallity.daggersandbox.scanner.Scanner;
import dagger.internal.DoubleCheck;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerAppComponent extends AppComponent {
  private Provider<IMainer> pMainerProvider;

  private DaggerAppComponent() {

    initialize();
  }

  public static Builder builder() {
    return new Builder();
  }

  public static AppComponent create() {
    return new Builder().build();
  }

  @SuppressWarnings("unchecked")
  private void initialize() {
    this.pMainerProvider = DoubleCheck.provider((Provider) Mainer_Factory.create());
  }

  @Override
  public MainSubcomponent.Builder getMainSub() {
    return new MainSubcomponentBuilder();}

  public static final class Builder {
    private Builder() {
    }

    /**
     * @deprecated This module is declared, but an instance is not used in the component. This method is a no-op. For more, see https://dagger.dev/unused-modules.
     */
    @Deprecated
    public Builder appModule(AppModule appModule) {
      Preconditions.checkNotNull(appModule);
      return this;
    }

    public AppComponent build() {
      return new DaggerAppComponent();
    }
  }

  private final class MainSubcomponentBuilder implements MainSubcomponent.Builder {
    @Override
    public MainSubcomponent build() {
      return new MainSubcomponentImpl();
    }
  }

  private final class MainSubcomponentImpl implements MainSubcomponent {
    private MainSubcomponentImpl() {

    }

    @Override
    public IMainer mainer() {
      return DaggerAppComponent.this.pMainerProvider.get();}

    @Override
    public IScanner scanner() {
      return new Scanner();}
  }
}
