// Generated by Dagger (https://dagger.dev).
package com.inquallity.daggersandbox.main;

import com.inquallity.daggersandbox.providers.MainSubcomponent;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerMainComponent implements MainComponent {
  private final MainSubcomponent mainSubcomponent;

  private DaggerMainComponent(MainSubcomponent mainSubcomponentParam) {
    this.mainSubcomponent = mainSubcomponentParam;
  }

  public static MainComponent.Builder builder() {
    return new Builder();
  }

  @Override
  public MainFeature getMainFeature() {
    return new MainFeature(Preconditions.checkNotNull(mainSubcomponent.mainer(), "Cannot return null from a non-@Nullable component method"), Preconditions.checkNotNull(mainSubcomponent.scanner(), "Cannot return null from a non-@Nullable component method"));}

  private static final class Builder implements MainComponent.Builder {
    private MainSubcomponent mainSubcomponent;

    @Override
    public Builder mainSub(MainSubcomponent sub) {
      this.mainSubcomponent = Preconditions.checkNotNull(sub);
      return this;
    }

    @Override
    public MainComponent build() {
      Preconditions.checkBuilderRequirement(mainSubcomponent, MainSubcomponent.class);
      return new DaggerMainComponent(mainSubcomponent);
    }
  }
}
